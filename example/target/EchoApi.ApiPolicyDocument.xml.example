<policies>
  <inbound>
    <check-header name="X-Checked" failed-check-httpcode="400" failed-check-error-message="Bad request" ignore-case="@(context.Variables.ContainsKey("Variable"))">
      <value>Test</value>
      <value>Other-Test</value>
    </check-header>
    <base />
    <set-header name="X-Test" exists-action="append">
      <value>Test</value>
      <value>@(context.Deployment.Region)</value>
      <value>@{
if (context.Variables.ContainsKey("Variable"))
{
    return "ContainsVariable";
}

return "NotContainVariable";
}</value>
      <value>@{
if (!context.Variables.TryGetValue("KnownGUID", out var guid))
{
    guid = Guid.NewGuid();
}

return guid.ToString();
}</value>
    </set-header>
  </inbound>
  <outbound>
    <base />
    <set-body>@{
var response = context.Response.Body.As<JObject>();
foreach (var key in new[]{"current", "minutely", "hourly", "daily", "alerts"})
{
    response.Property(key)?.Remove();
}

return response.ToString();
}</set-body>
  </outbound>
</policies>